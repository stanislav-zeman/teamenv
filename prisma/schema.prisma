// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
  // shadowDatabaseUrl = env(“SHADOW_DATABASE_URL”)
}

model User {
  id        String        @id @default(uuid())
  username  String
  email     String
  avatarUrl String
  createdAt DateTime      @default(now())
  APIKey String
  editedAt  DateTime?
  deletedAt DateTime?
  projects  ProjectUser[]
}

enum Role {
  OWNER
  MAINTAINER
  DEVELOPER
  GUEST
}

model ProjectUser {
  id              String           @id @default(uuid())
  role            Role
  user            User             @relation(fields: [userId], references: [id])
  userId          String
  project         Project          @relation(fields: [projectId], references: [id])
  projectId       String
  createdAt       DateTime         @default(now())
  editedAt        DateTime?
  deletedAt       DateTime?
  hiddenVariables HiddenVariable[]
}

model Project {
  id          String        @id @default(uuid())
  name        String
  description String
  createdAt   DateTime      @default(now())
  editedAt    DateTime?
  deletedAt   DateTime?
  variables   Variable[]
  users       ProjectUser[]
}

enum Environment {
  PREVIEW
  DEVELOPMENT
  STAGING
  PRODUCTION
}

model Variable {
  id             String           @id @default(uuid())
  project        Project          @relation(fields: [projectId], references: [id])
  projectId      String
  createdAt      DateTime         @default(now())
  deletedAt      DateTime?
  name           String
  value          String
  environment    Environment
  hiddenVariable HiddenVariable[]
}

model HiddenVariable {
  id            String      @id @default(uuid())
  projectUser   ProjectUser @relation(fields: [projectUserId], references: [id])
  projectUserId String
  variable      Variable    @relation(fields: [variableId], references: [id])
  variableId    String
  hidden        Boolean
}
